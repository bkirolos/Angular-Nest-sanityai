name: Prod Deploy 

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deploy-to-prod:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # need checkout before using docker-compose-remote-action
      - uses: actions/checkout@v2
      
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.TULSA_REMOTE_SSH_PRIVATE_KEY }}
          known_hosts: 'just-a-placeholder-so-we-dont-get-errors'

      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.PROD_SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Stop old versions
        run: ssh ubuntu@${{ secrets.PROD_SSH_HOST }} 'pm2 stop server; pm2 stop client;'
        
      - name: Deploy with rsync
        run: rsync -avz ./ ubuntu@${{ secrets.PROD_SSH_HOST }}:/apps/tulsa-remote-live/ --delete
        
      - name: Copy ENV file
        run: ssh ubuntu@${{ secrets.PROD_SSH_HOST }} 'cp /home/ubuntu/.env.prod /apps/tulsa-remote-live/server/.env'
        
      - name: Start Backend
        run: ssh ubuntu@${{ secrets.PROD_SSH_HOST }} 'cd /apps/tulsa-remote-live/server && npm install && nest build && pm2 start server'
        
      - name: Start Frontend
        run: ssh ubuntu@${{ secrets.PROD_SSH_HOST }} 'cd /apps/tulsa-remote-live/client && npm install && ng build --prod && pm2 start client'
        
